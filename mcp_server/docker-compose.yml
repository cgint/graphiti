services:
  neo4j:
    image: neo4j:5.26.0
    restart: unless-stopped
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt
    environment:
      - NEO4J_AUTH=neo4j/demodemo
      - NEO4J_server_memory_heap_initial__size=512m
      - NEO4J_server_memory_heap_max__size=1G
      - NEO4J_server_memory_pagecache_size=512m
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "http://localhost:7474"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  graphiti-mcp:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - path: .env
        required: false # Makes the file optional. Default value is 'true'
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=demodemo
      - OLLAMA_BASE_URL=http://host.docker.internal:11434/v1
      - PATH=/root/.local/bin:${PATH}
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT:-your-project-id}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/adc.json
    volumes:
      # Mount the ADC file from your local machine to the container.
      # The path to your local ADC file might vary.
      - ~/.config/gcloud/application_default_credentials.json:/app/adc.json:ro
    ports:
      - "8667:8000" # Expose the MCP server via HTTP for SSE transport
    command: ["uv", "run", "graphiti_mcp_server_gemini_ollama.py", "--transport", "sse", "--host", "0.0.0.0", "--use-custom-entities"]

volumes:
  neo4j_data:
  neo4j_logs:
